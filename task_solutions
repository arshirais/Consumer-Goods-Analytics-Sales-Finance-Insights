# QS 1: Croma India product wise sales report for fiscal year 2021

select 
s.date, s.product_code, 
      p.product, p.variant, s.sold_quantity,
      g.gross_price, 
	g.gross_price*s.sold_quantity as gross_price_total
	from fact_sales_monthly s
	Join dim_product p 
		on s.product_code = p.product_code
  Join fact_gross_price g 
	  on 
      p.product_code = g.product_code and
      g.fiscal_year = get_fiscal_year(s.date)
  where 	customer_code = 90002002 and
			get_fiscal_year(date) = 2021
	order by date
	limit 10000;

# QS 2:  Gross monthly total sales report for Croma

SELECT 
	s.date,
    ROUND(sum(g.gross_price*s.sold_quantity),2) as gross_price_total
FROM fact_sales_monthly s
Join fact_gross_price g
	on s.product_code = s.product_code and 
    g.fiscal_year = get_fiscal_year(s.date)
WHERE customer_code = 90002002
group by s.date
order by s.date asc;


#QS 3: Created stored procedure for monthly gross sales report

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_monthly_gross_sales_for_customer`(
     IN  cust_code  VARCHAR(100)
	    
)
BEGIN
   SELECT  g.fiscal_year, 
   sum(g.gross_price*s.sold_quantity) as gross_price_total
   from fact_sales_monthly s
   join fact_gross_price g
   ON s.product_code = g.product_code and g.fiscal_year = get_fiscal_year(s.date)
   where find_in_set(s.customer_code, cust_code) 
  group by g.fiscal_year
  order by g.fiscal_year asc;
END


# QS 4: Stored procedure for market badge

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_market_badge`(
IN in_market varchar(50),
IN in_fiscal_year year,
OUT out_badge varchar(50)
)
BEGIN
	declare qty int default 0;
    
	Select sum(s.sold_quantity) into qty   
	from fact_sales_monthly s
	join dim_customer c on s.customer_code = c.customer_code
	where get_fiscal_year(s.date) = in_fiscal_year and c.market = in_market
	group by c.market;
    
    if qty > 5000000 then set out_badge = 'Gold';
    else set out_badge = 'Silver';
    end if;
END


# QS 5: Top markets, products, customers for a given financial year.

##--------(TOP MARKETS) ----------
 CREATE DEFINER=`root`@`localhost` PROCEDURE `get_top_n_markets_by_net_sales`(
	in_fiscal_year INT,
    in_top_n INT
)
BEGIN
SELECT
market,
round(sum(net_sales)/1000000,2) as net_sales_mln
FROM gdb0041.net_sales
where fiscal_year = in_fiscal_year
group by market
order by net_sales_mln desc
limit in_top_n;
END

##--------(TOP PRODUCTS) -------
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_top_n_products_by_net_sales`(
	in_fiscal_year int,
    in_top_n int
)
BEGIN
SELECT
product,
round(sum(net_sales)/1000000,2) as net_sales_mln
FROM gdb0041.net_sales
where fiscal_year = in_fiscal_year
group by product
order by net_sales_mln desc
limit in_top_n;
END

##-------- (TOP CUSTOMERS) ----------
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_top_n_customers_by_net_sales`(
	in_market varchar(50),
    in_fiscal_year int,
    in_top_n int
)
BEGIN
SELECT
c.customer,
round(sum(net_sales)/1000000,2) as net_sales_mln
FROM gdb0041.net_sales n
join dim_customer c
on c.customer_code = n.customer_code
where fiscal_year = in_fiscal_year and n.market = in_market
group by c.customer
order by net_sales_mln desc
limit in_top_n;
END

#QS 6: Net sales % share Global (TOP 10 MARKETS).
with CTE1 as (
	SELECT
	c.customer,
	round(sum(net_sales)/1000000,2) as net_sales_mln
	FROM gdb0041.net_sales n
	join dim_customer c
	on c.customer_code = n.customer_code
	where fiscal_year = 2021
	group by c.customer)

select *,
net_sales_mln*100/sum(net_sales_mln) over() as pct
from CTE1
order by net_sales_mln desc;

#QS 7: Net Sales % Share by region . 
with CTE1 as (
	SELECT
	c.customer,
    c.region,
	round(sum(net_sales)/1000000,2) as net_sales_mln
	FROM gdb0041.net_sales n
	join dim_customer c
	on c.customer_code = n.customer_code
	where fiscal_year = 2021
	group by c.customer, c.region)

select *,
net_sales_mln*100/sum(net_sales_mln) over(partition by region) as pct
from CTE1
order by region, net_sales_mln desc;

#Q8: Top N Products in Each Division by Quantity Sold.

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_top_n_products_per_division_by_qty_sold`(
	in_fiscal_year int,
	in_top_n int
)
BEGIN
with cte1 as (
  select
	 p.division as Division,
	 p.product as Products,
	 sum(s.sold_quantity) as Total_qty
	from fact_sales_monthly s
	join dim_product p on s.product_code = p.product_code
	where fiscal_year = in_fiscal_year
	group by p.product),
 cte2 as (select *,
       dense_rank() over(partition by Division order by Total_qty desc) as dnk
	from cte1)
	select * from cte2
        where dnk <= in_top_n;

#QS 9: top 2 markets in every region by their gross sales amount in FY=2021.

    with cte1 as (
		select
			c.market,
			c.region,
			round(sum(gross_price_total)/1000000,2) as gross_sales_mln
			from gross_sales s
			join dim_customer c
			on c.customer_code=s.customer_code
			where fiscal_year=2021
			group by market
			order by gross_sales_mln desc
		),
		cte2 as (
			select *,
			dense_rank() over(partition by region order by gross_sales_mln desc) as drnk
			from cte1
		)
	select * from cte2 where drnk<=2;

#QS 10:  stored procedure that takes market, fiscal_year and top n as an input and returns top n customers by net sales in that given fiscal year and market.

	CREATE PROCEDURE `get_top_n_customers_by_net_sales`(
        	in_market VARCHAR(45),
        	in_fiscal_year INT,
    		in_top_n INT
	)
	BEGIN
        	select 
                     customer, 
                     round(sum(net_sales)/1000000,2) as net_sales_mln
        	from net_sales s
        	join dim_customer c
                on s.customer_code=c.customer_code
        	where 
		    s.fiscal_year=in_fiscal_year 
		    and s.market=in_market
        	group by customer
        	order by net_sales_mln desc
        	limit in_top_n;
	END




